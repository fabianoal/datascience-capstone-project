find_rtools()
install.packages("KernSmooth")
find.package("KernSmooth")
package_version("KernSmooth")
library(KernSmooth)
x <- rexp(n=40, rate = 0.2)
hist(x)
x <- sapply(1:100, function(x) mean(rexp(n=40, rate=0.2)))
hist(x)
x <- sapply(1:1000, function(x) mean(rexp(n=40, rate=0.2)))
hist(x)
x <- rexp(n=40, rate = 0.2)
var(x)
x <- sapply(1:100, function(x) mean(rexp(n=40, rate=0.2)))
var(x)
x <- rexp(n=40, rate = 0.2)
hist(x)
hist(x)
x <- sapply(1:100, function(x) mean(rexp(n=40, rate=0.2)))
hist(x)
x <- sapply(1:1000, function(x) mean(rexp(n=40, rate=0.2)))
hist(x)
x <- rexp(n=40, rate = 0.2)
qplot(x)
library(ggplot2)
qplot(x)
qplot(x, geom="histogram")
g <- ggplot()
g = g + geom_histogram(data = x)
g = g + geom_histogram(x)
g <- ggplot(data = x, aes(x))
g <- ggplot(data = x)
geom_histogram(x)
x <- rexp(n=40, rate = 0.2)
geom_histogram(x)
qplot(x,
geom="histogram",
labs(title="Histogram of Exponential Distribution Sample"),
labs(x="Variable", y="Frequency"))
g <- qplot(x, geom="histogram")
g <- g + labs(title="Histogram of Exponential Distribution Sample", x="Variable", y="Frequency")
g
hist(x)
g <- qplot(x, geom="histogram", col="red")
g <- g + labs(title="Histogram of Exponential Distribution Sample", x="Variable", y="Frequency")
g
g <- qplot(x, geom="histogram", col="rexp")
g <- g + labs(title="Histogram of Exponential Distribution Sample", x="Variable", y="Frequency")
g
g <- qplot(x, geom="histogram", col="rexp", fill="green", alpha=.2)
g <- g + labs(title="Histogram of Exponential Distribution Sample", x="Variable", y="Frequency")
g
help(qplot)
g <- qplot(x, geom="histogram", col="rexp", fill="green", alpha=.2)
g <- g + labs(title="Histogram of Exponential Distribution Sample", x="Variable", y="Frequency")
g <- g + geom_histogram(col="red",  fill="green",  alpha = .2)
g
g <- qplot(x, geom="histogram")
g <- g + labs(title="Histogram of Exponential Distribution Sample", x="Variable", y="Frequency")
g <- g + geom_histogram(col="red",  fill="green",  alpha = .2)
g
g <- g + labs(title="Histogram of Exponential Distribution Sample", x="Variable", y="Frequency")
g <- qplot(x, geom="histogram")
g <- g + labs(title="Histogram of Exponential Distribution Sample", x="Variable", y="Frequency")
g <- g + geom_histogram(col="#635C51",  fill="#635C51",  alpha = .2)
g <- g + theme(plot.background="#271033", panel.grid="#380F36")
g
g <- qplot(x, geom="histogram")
g <- g + labs(title="Histogram of Exponential Distribution Sample", x="Variable", y="Frequency")
g <- g + geom_histogram(col="#635C51",  fill="#635C51",  alpha = .2)
g <- g + theme(plot.background="#271033", panel.grid="#380F36")
g
g <- qplot(x, geom="histogram")
g <- g + labs(title="Histogram of Exponential Distribution Sample", x="Variable", y="Frequency")
g <- g + geom_histogram(col="#635C51",  fill="#635C51",  alpha = .2)
g <- g + theme(panel.grid.minor = element_blank(), panel.background="#271033", panel.grid="#380F36")
g
g <- qplot(x, geom="histogram")
g <- g + labs(title="Histogram of Exponential Distribution Sample", x="Variable", y="Frequency")
g <- g + geom_histogram(col="#635C51",  fill="#635C51",  alpha = .2)
g <- g + theme(panel.grid.minor = element_blank(), panel.background= element_rect(colour = "#271033"), panel.grid="#380F36")
g
g <- qplot(x, geom="histogram")
g <- g + labs(title="Histogram of Exponential Distribution Sample", x="Variable", y="Frequency")
g <- g + geom_histogram(col="#635C51",  fill="#635C51",  alpha = .2)
g <- g + theme(panel.grid.minor = element_blank(), panel.background= element_rect(colour = "#271033"), panel.grid=element_line(colour = "#380F36"))
g
g <- qplot(x, geom="histogram")
g <- g + labs(title="Histogram of Exponential Distribution Sample", x="Variable", y="Frequency")
g <- g + geom_histogram(col="#635C51",  fill="#635C51",  alpha = .2)
g <- g + theme(
panel.grid.minor = element_blank(),
panel.background = element_rect(colour = "#271033", fill = "#271033"),
panel.grid=element_line(colour = "#380F36")
)
g
g <- qplot(x, geom="histogram")
g <- g + labs(title="Histogram of Exponential Distribution Sample", x="Variable", y="Frequency")
g <- g + geom_histogram(col="#635C51",  fill="#635C51",  alpha = .2)
g <- g + theme(
panel.grid.minor = element_blank(),
panel.background = element_rect(colour = "#271033", fill = "#271033"),
panel.grid=element_line(colour = "#380F36")
panel.grid.major = element_line(colour = "#380F36")
)
g
g <- qplot(x, geom="histogram")
g <- g + labs(title="Histogram of Exponential Distribution Sample", x="Variable", y="Frequency")
g <- g + geom_histogram(col="#635C51",  fill="#635C51",  alpha = .2)
g <- g + theme(
panel.grid.minor = element_blank(),
panel.background = element_rect(colour = "#271033", fill = "#271033"),
panel.grid=element_line(colour = "#380F36"),
panel.grid.major = element_line(colour = "#380F36")
)
g
g <- qplot(x, geom="histogram")
g <- g + labs(title="Histogram of Exponential Distribution Sample", x="Variable", y="Frequency")
g <- g + geom_histogram(col="#635C51",  fill="#635C51",  alpha = .2)
g <- g + theme(
panel.grid.minor = element_blank(),
panel.background = element_rect(colour = "#F1FFE7", fill = "#F1FFE7"),
panel.grid=element_line(colour = "#380F36"),
panel.grid.major = element_line(colour = "#380F36")
)
g
g <- qplot(x, geom="histogram")
g <- g + labs(title="Histogram of Exponential Distribution Sample", x="Variable", y="Frequency")
g <- g + geom_histogram(col="#084C61",  fill="#084C61",  alpha = .2)
g <- g + theme(
panel.grid.minor = element_blank(),
panel.background = element_rect(colour = "#FFFFFF", fill = "#FFFFFF"),
panel.grid=element_line(colour = "#380F36"),
panel.grid.major = element_line(colour = "#5299D3")
)
g
g <- qplot(x, geom="histogram")
g <- g + labs(title="Histogram of Exponential Distribution Sample", x="Variable", y="Frequency")
g <- g + geom_histogram(col="#084C61",  fill="#084C61",  alpha = .2)
g <- g + annotate("text", x = 15, y = 4, label = paste("Variation:",var(x))
g <- g + theme(
panel.grid.minor = element_blank(),
panel.background = element_rect(colour = "#FFFFFF", fill = "#FFFFFF"),
panel.grid=element_line(colour = "#380F36"),
panel.grid.major = element_line(colour = "#5299D3")
)
g
g <- qplot(x, geom="histogram")
g <- g + labs(title="Histogram of Exponential Distribution Sample", x="Variable", y="Frequency")
g <- g + geom_histogram(col="#084C61",  fill="#084C61",  alpha = .2)
g <- g + annotate("text", x = 15, y = 4, label = paste("Variation:",var(x)))
g <- g + theme(
panel.grid.minor = element_blank(),
panel.background = element_rect(colour = "#FFFFFF", fill = "#FFFFFF"),
panel.grid=element_line(colour = "#380F36"),
panel.grid.major = element_line(colour = "#5299D3")
)
g
g <- qplot(x, geom="histogram")
g <- g + labs(title="Histogram of Exponential Distribution Sample", x="Variable", y="Frequency")
g <- g + geom_histogram(col="#084C61",  fill="#084C61",  alpha = .2)
g <- g + annotate("text", x = 15.5, y = 4.8, label = paste("Variation:",var(x)))
g <- g + annotate("text", x = 15.5, y = 4.6, label = paste("mean:",mean(x)))
g <- g + theme(
panel.grid.minor = element_blank(),
panel.background = element_rect(colour = "#FFFFFF", fill = "#FFFFFF"),
panel.grid=element_line(colour = "#380F36"),
panel.grid.major = element_line(colour = "#5299D3")
)
g
g <- qplot(x, geom="histogram")
g <- g + labs(title="Histogram of Exponential Distribution Sample", x="Variable", y="Frequency")
g <- g + geom_histogram(col="#084C61",  fill="#084C61",  alpha = .2)
g <- g + annotate("text", x = 15.5, y = 4.8, label = paste("Variation:", formatC(var(x), digits = 2)))
g <- g + annotate("text", x = 15.5, y = 4.6, label = paste("mean:",formatC(mean(x), digits = 2)))
g <- g + theme(
panel.grid.minor = element_blank(),
panel.background = element_rect(colour = "#FFFFFF", fill = "#FFFFFF"),
panel.grid=element_line(colour = "#380F36"),
panel.grid.major = element_line(colour = "#5299D3")
)
g
g <- qplot(x, geom="histogram")
g <- g + labs(title="Histogram of Exponential Distribution Sample", x="Variable", y="Frequency")
g <- g + geom_histogram(col="#084C61",  fill="#084C61",  alpha = .2)
g <- g + annotate("text", x = 16, y = 4.8, label = paste("Variation:", formatC(var(x), digits = 2)))
g <- g + annotate("text", x = 16, y = 4.6, label = paste("mean:",formatC(mean(x), digits = 2)))
g <- g + theme(
panel.grid.minor = element_blank(),
panel.background = element_rect(colour = "#FFFFFF", fill = "#FFFFFF"),
panel.grid=element_line(colour = "#380F36"),
panel.grid.major = element_line(colour = "#5299D3")
)
g
g <- qplot(x, geom="histogram")
g <- g + labs(title="Histogram of Exponential Distribution Sample", x="Variable", y="Frequency")
g <- g + geom_histogram(col="#084C61",  fill="#084C61",  alpha = .2)
g <- g + annotate("text", x = 17, y = 4.8, label = paste("Variation:", formatC(var(x), digits = 2)))
g <- g + annotate("text", x = 17, y = 4.6, label = paste("mean:",formatC(mean(x), digits = 2)))
g <- g + theme(
panel.grid.minor = element_blank(),
panel.background = element_rect(colour = "#FFFFFF", fill = "#FFFFFF"),
panel.grid=element_line(colour = "#380F36"),
panel.grid.major = element_line(colour = "#5299D3")
)
g
def_theme <- theme(
panel.grid.minor = element_blank(),
panel.background = element_rect(colour = "#FFFFFF", fill = "#FFFFFF"),
panel.grid=element_line(colour = "#380F36"),
panel.grid.major = element_line(colour = "#5299D3")
)
x <- sapply(1:1000, function(x) rexp(n=40, rate = 0.2))
n <- 1000
means <- cumsum(rexp(n=40, rate = 0.2))/(1:n)
g <- ggplot(data.frame(x = 1:n, y = means), aes(x = x, y = y))
g <- g + geom_hline(yintercept = 0.5) + geom_line(size = 2)
g <- g + labs(x = "Number of obs", y = "Cumulative mean")
g <- g + def_theme
g
g <- g + annotate("text", x = 800, y = 6.9, label = paste("mean:",formatC(means[999], digits = 2)))
g
g <- g + annotate("text", x = 800, y = 6.9, label = paste("mean:",formatC(means[0], digits = 2)))
g
g <- ggplot(data.frame(x = 1:n, y = means), aes(x = x, y = y))
g <- g + geom_hline(yintercept = 0.5) + geom_line(size = 2)
g <- g + labs(x = "Number of obs", y = "Cumulative mean")
g <- g + def_theme
g <- g + annotate("text", x = 800, y = 6.9, label = paste("mean:",formatC(means[0], digits = 2)))
g
g <- ggplot(data.frame(x = 1:n, y = means), aes(x = x, y = y))
g <- g + geom_hline(yintercept = 0.5) + geom_line(size = 2, fill)
g <- g + scale_colour_gradient(low="#0D1F2D", high = "#FF8552")
g <- g + labs(x = "Number of obs", y = "Cumulative mean")
g <- g + def_theme
g <- g + annotate("text", x = 800, y = 6.9, label = paste("mean:",formatC(means[n - 1], digits = 2)))
g
g <- ggplot(data.frame(x = 1:n, y = means), aes(x = x, y = y))
g <- g + geom_hline(yintercept = 0.5) + geom_line(size = 2)
g <- g + scale_colour_gradient(low="#0D1F2D", high = "#FF8552")
g <- g + labs(x = "Number of obs", y = "Cumulative mean")
g <- g + def_theme
g <- g + annotate("text", x = 800, y = 6.9, label = paste("mean:",formatC(means[n - 1], digits = 2)))
g
g <- ggplot(data.frame(x = 1:n, y = means), aes(x = x, y = y))
g <- g + geom_hline(yintercept = 0.5) + geom_line(size = 2)
g <- g + scale_colour_gradient(low="#0D1F2D", high = "#FF8552")
g <- g + labs(x = "Number of obs", y = "Cumulative mean")
g <- g + def_theme
g <- g + annotate("text", x = 800, y = 6.9, label = paste("mean:",formatC(means[n - 1], digits = 2)))
g
g <- ggplot(data.frame(x = 1:n, y = means), aes(x = x, y = y))
g <- g + geom_hline(yintercept = 0.5) + geom_line(size = 2)
g <- g + labs(x = "Number of obs", y = "Cumulative mean")
g <- g + def_theme
g <- g + annotate("text", x = 800, y = 6.9, label = paste("mean:",formatC(means[n - 1], digits = 2)))
g
g <- ggplot(data.frame(x = 1:n, y = means), aes(x = x, y = y))
g <- g + geom_hline(yintercept = 0.5) + geom_line(size = 2)
g <- g + scale_colour_gradient(limits=c(0, 6), low="#0D1F2D", high = "#FF8552")
g <- g + labs(x = "Number of obs", y = "Cumulative mean")
g <- g + def_theme
g <- g + annotate("text", x = 800, y = 6.9, label = paste("mean:",formatC(means[n - 1], digits = 2)))
g
g <- ggplot(data.frame(x = 1:n, y = means), aes(x = x, y = y, colour = x))
g <- g + geom_hline(yintercept = 0.5) + geom_line(size = 2)
g <- g + scale_colour_gradient(limits=c(0, 6), low="#0D1F2D", high = "#FF8552")
g <- g + labs(x = "Number of obs (samples n=40)", y = "Cumulative mean")
g <- g + def_theme
g <- g + annotate("text", x = 800, y = 6.9, label = paste("mean:",formatC(means[n - 1], digits = 2)))
g
g <- ggplot(data.frame(x = 1:n, y = means), aes(x = x, y = y, colour = x))
g <- g + geom_hline(yintercept = 0.5) + geom_line(size = 2)
g <- g + scale_colour_gradient(limits=c(0, n-1), low="#0D1F2D", high = "#FF8552")
g <- g + labs(x = "Number of obs (samples n=40)", y = "Cumulative mean")
g <- g + def_theme
g <- g + annotate("text", x = 800, y = 6.9, label = paste("mean:",formatC(means[n - 1], digits = 2)))
g
g <- ggplot(data.frame(x = 1:n, y = means), aes(x = x, y = y, colour = x))
g <- g + geom_hline(yintercept = 0.5) + geom_line(size = 2)
g <- g + scale_colour_gradient(limits=c(0, n-1), low="#FF8552", high = "#0D1F2D")
g <- g + labs(x = "Number of obs (samples n=40)", y = "Cumulative mean")
g <- g + def_theme
g <- g + annotate("text", x = 800, y = 6.9, label = paste("mean:",formatC(means[n - 1], digits = 2)))
g
g <- ggplot(data.frame(x = 1:n, y = means), aes(x = x, y = y, colour = x))
g <- g + geom_hline(yintercept = 0.5) + geom_line(size = 2)
g <- g + scale_colour_gradient(limits=c(0, n-1), low="#297373", high = "#0D1F2D")
g <- g + labs(x = "Number of obs (samples n=40)", y = "Cumulative mean")
g <- g + def_theme
g <- g + annotate("text", x = 800, y = 6.9, label = paste("mean:",formatC(means[n - 1], digits = 2)))
g
def_theme <- theme(
panel.grid.minor = element_blank(),
panel.background = element_rect(colour = "#FFFFFF", fill = "#FFFFFF"),
panel.grid=element_line(colour = "#380F36"),
panel.grid.major = element_line(colour = "#FDFFFC")
)
g <- ggplot(data.frame(x = 1:n, y = means), aes(x = x, y = y, colour = x))
g <- g + geom_hline(yintercept = 0.5) + geom_line(size = 2)
g <- g + scale_colour_gradient(limits=c(0, n-1), low="#297373", high = "#0D1F2D")
g <- g + labs(x = "Number of obs (samples n=40)", y = "Cumulative mean")
g <- g + def_theme
g <- g + annotate("text", x = 800, y = 6.9, label = paste("mean:",formatC(means[n - 1], digits = 2)))
g
def_theme <- theme(
panel.grid.minor = element_blank(),
panel.background = element_rect(colour = "#FFFFFF", fill = "#FFFFFF"),
panel.grid=element_line(colour = "#380F36"),
panel.grid.major = element_line(colour = "##EDE6E3")
)
g <- ggplot(data.frame(x = 1:n, y = means), aes(x = x, y = y, colour = x))
g <- g + geom_hline(yintercept = 0.5) + geom_line(size = 2)
g <- g + scale_colour_gradient(limits=c(0, n-1), low="#297373", high = "#0D1F2D")
g <- g + labs(x = "Number of obs (samples n=40)", y = "Cumulative mean")
g <- g + def_theme
g <- g + annotate("text", x = 800, y = 6.9, label = paste("mean:",formatC(means[n - 1], digits = 2)))
g
def_theme <- theme(
panel.grid.minor = element_blank(),
panel.background = element_rect(colour = "#FFFFFF", fill = "#FFFFFF"),
panel.grid=element_line(colour = "#380F36"),
panel.grid.major = element_line(colour = "#EDE6E3")
)
g <- ggplot(data.frame(x = 1:n, y = means), aes(x = x, y = y, colour = x))
g <- g + geom_hline(yintercept = 0.5) + geom_line(size = 2)
g <- g + scale_colour_gradient(limits=c(0, n-1), low="#297373", high = "#0D1F2D")
g <- g + labs(x = "Number of obs (samples n=40)", y = "Cumulative mean")
g <- g + def_theme
g <- g + annotate("text", x = 800, y = 6.9, label = paste("mean:",formatC(means[n - 1], digits = 2)))
g
g <- ggplot(data.frame(x = 1:n, y = means), aes(x = x, y = y))
g <- g + geom_hline(yintercept = 0.5) + geom_line(size = 2, color='steelblue')
g <- g + labs(x = "Number of obs (samples n=40)", y = "Cumulative mean")
g <- g + def_theme
g <- g + annotate("text", x = 800, y = 6.9, label = paste("mean:",formatC(means[n - 1], digits = 2)))
g
g <- ggplot(data.frame(x = 1:n, y = means), aes(x = x, y = y))
g <- g + geom_hline(yintercept = means[n - 1]) + geom_line(size = 2, color='steelblue')
g <- g + labs(x = "Number of obs (samples n=40)", y = "Cumulative mean")
g <- g + def_theme
g <- g + annotate("text", x = 800, y = 6.9, label = paste("mean:",formatC(means[n - 1], digits = 2)))
g
x <- rexp(n=40, rate = 0.2)
g <- qplot(x, geom="histogram")
g <- g + labs(title="Histogram of Exponential Distribution Sample", x="Variable", y="Frequency")
g <- g + geom_histogram(col="#084C61",  fill="#084C61",  alpha = .2)
g <- g + annotate("text", x = 17, y = 4.8, label = paste("Variation:", formatC(var(x), digits = 2)))
g <- g + annotate("text", x = 17, y = 4.6, label = paste("mean:",formatC(mean(x), digits = 2)))
g <- g + def_theme
g
g <- ggplot(data.frame(x = 1:n, y = means), aes(x = x, y = y))
g <- g + geom_hline(yintercept = means[n - 1]) + geom_line(size = 2, color='#084C61')
g <- g + labs(x = "Number of obs (samples n=40)", y = "Cumulative mean")
g <- g + def_theme
g <- g + annotate("text", x = 800, y = 6.9, label = paste("mean:",formatC(means[n - 1], digits = 2)))
g
m_data <- sapply(1:n, function(x) rexp(n=40, rate = 0.2))
n <- 10000
means <- cumsum(rexp(n=40, rate = 0.2))/(1:n)
g <- ggplot(data.frame(x = 1:n, y = means), aes(x = x, y = y))
g <- g + geom_hline(yintercept = means[n - 1]) + geom_line(size = 2, color='#084C61')
g <- g + labs(x = "Number of obs (samples n=40)", y = "Cumulative mean")
g <- g + def_theme
g <- g + annotate("text", x = 800, y = 6.9, label = paste("mean:",formatC(means[n - 1], digits = 2)))
g
n <- 1000
means <- cumsum(rexp(n=40, rate = 0.2))/(1:n)
g <- ggplot(data.frame(x = 1:n, y = means), aes(x = x, y = y))
g <- g + geom_hline(yintercept = means[n - 1]) + geom_line(size = 2, color='#084C61')
g <- g + labs(x = "Number of obs (samples n=40)", y = "Cumulative mean")
g <- g + def_theme
g <- g + annotate("text", x = 800, y = 6.9, label = paste("mean:",formatC(means[n - 1], digits = 2)))
g
x <- lseq(1, 130, 130)
library(sfsmisc)
install.packages("sfsmisc")
db
lnorm
seq(10,130,120)
seq
help(seq)
seq(10,130)
x <- seq(10,130)
log(20)
log(100,20)
log(100,10)
log(1000,10)
10log(70/120)
10*log(70/120)
10*log(110/120)
10*log(110/120, 10)
help log
help(log)
10*log10(110/120)
10*log10(70/120)
10*log10(119/120)
10*log10(70/120)
10*log10(120/70)
mean(c( 98, 85, 86, 83))
(88+100+100)/7
sum(86,100,100)/7
286/7
630/7
286/3
install.packages(c("UsingR"))
data (father.son)
use(UsingR)
library(UsingR)
data("father.son")
father.son
summary(father.son)
fit = lm(father.son$sheight ~ I(father.son$fheight - mean(father.son$fheight)))
summary(fit)
help(qt)
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
fit <- lm(y ~ x)
summary(fit)
summary(fit)
data(mtcars)
tbl_df(mtcars)
library(dplyr)
tbl_df(mtcars)
x <- mtcars$wt
y <- mtcars$mpg
fit <- lm(y ~ x)
summary(fit)
fit <- lm(y ~ I(x - mean(x)))
summary(fit)
fit$coefficients[1,1]
fit$coefficients[0,1]
fit$coefficients[0]
coef(fit)
coef(fit)[0]
coef(fit)[0,]
coef(fit)$Intercept
coef(fit)[0]
coef(fit)[1]
coef(fit)[2]
coef(fit)[1] * c(-1,1) * qt(0.975, fit$df)
coef(fit)[1] + c(-1,1) * qt(0.975, fit$df)
predict(fit, newdata = c(mean(x)), interval=c("confidence"))
predict(fit, newdata = c(mean(x)), interval="confidence")
predict(fit,interval="confidence")
predict(fit, newdata = data.frame(c(mean(x))), interval="confidence")
newx = data.frame(c(mean(x)))
newx
predict(fit, newdata = newx, interval="confidence")
x
mean(x)
predict(fit, newdata = newx, interval="prediction")
summary(fit)
fit <- lm(y ~ x)
fit$coefficients[0]
fit$coefficients[0,1]
fit$coefficients[0,0]
fit$coefficients[1,0]
fit$coefficients[1,1]
fit$coefficients
fit$coefficients[1,]
predict(fit, newdata = data.frame(x = mean(x)), interval="prediction")
x <- mtcars$wt
y <- mtcars$mpg
fit <- lm(y ~ x)
summary(fit)
predict(fit, newdata = data.frame(x=mean(x)), interval="confidence")
help(mtcars)
tbl_df(mtcars)
predict(fit, newdata = data.frame(x=3, interval="confidence")
predict(fit, newdata = data.frame(x=3), interval="confidence")
mean(x)
predict(fit, newdata = data.frame(x=3), interval="prediction")
(fit$coefficients[2,1] + c(-1,1) * qt(0.975, df= fit$df) * fit$coefficients[2,2]) * 2
fit$coefficients
fit$coefficients[2,1]
coef(fit)
coef(fit)[2,1]
coef(fit)[1,1]
summary(coef(fit))
str(coef(fit))
summary(fit)$coefficients
sumCoef = summary(fit)$coefficients
sumCoef <- summary(fit)$coefficients
sumCoef[2,1] + c(-1,1) * qt(0.975,df = fit$df) * sumCoef[2,2]
(sumCoef[2,1] + c(-1,1) * qt(0.975,df = fit$df) * sumCoef[2,2])*2
summary(fit)
sd(y)
var(y)
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
lm(y~x)
summary(lm(y~x))
install.packages(c("caret","dplyr","lubridate","AppliedPredictiveModeling", "pgmm", "ElemStatLearn"))
setwd("C:\\Users\\Fabiano\\Documents\\GitHub\\datascience-capstone-project")
library(shiny)
runApp("capstone-app")
temp <- c("I'm", "*'s", "test", "*name", "teste2")
temp[grepl("[^a-z\']", temp)]
temp[grepl("[a-z\']", temp)]
temp[grepl("[^\*]", temp)]
temp[grepl("[^\\*]", temp)]
temp[grepl("\\*", temp)]
temp[!grepl("\\*", temp)]
getwd()
runapp("capstone-app")
library(shiny)
runapp("capstone-app")
runApp("capstone-app")
rsconnect::setAccountInfo(name='fabianoal', token='59EB86D946771C6582A639AA36EF4700',  secret='Af3L2in55Zhpn6Exdi9fOcE8VJmpNalAUFAf9ITd')
deployApp("capstone-app")
rsconnect::deployApp("capstone-app")
